install.packages("ggplot2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.10")
BiocManager::available()
install.packages(c("dplyr", "tidyr", "tidytext"))
library(DOSE)
# ------------ Local Dataset ----------------------------------------
data_file <- readRDS("~/data14Features.rds")
colnames(rowData(data_file))
analysis_data <- metadata(data_file)$limma[,"Sirt_vs_Mock",] %>%
as.data.frame()%>%
dplyr::select(effect)%>%
cbind(.,ENTREZ_ID = rowData(data_file)$ENTREZID)
analysis_data$ENTREZ_ID <- analysis_data$ENTREZ_ID %>%
stringr::str_split(.,";",simplify = TRUE)%>%
.[,1]
geneList <- analysis_data %>% dplyr::filter(ENTREZ_ID != "" & effect != "")%>%
dplyr::select(ENTREZ_ID,effect)
# gene <- names(geneList)[abs(geneList) > 1.5]
# Step 4 - Numeric vector - effect value
gene_num_vec <- geneList [,2]
#        - Character vector - ENTREZ IDs
names(gene_num_vec) <- as.character(geneList [,1])
#        - Ordered Vector
gene_num_vec <- sort(gene_num_vec,decreasing = TRUE, na.last = TRUE)
# Step 5 - Remove duplicate values
any(duplicated(names(gene_num_vec)))
gene_num_vec <- gene_num_vec[!duplicated(names(gene_num_vec))]
gene <- names(gene_num_vec)
#--------------- DO (Disease Ontology) -------------------------------
# enrichDo function - is useful for identifying disease association of interesting genes
x <- enrichDO(gene          = gene,
ont           = "DO",
pvalueCutoff  = 0.02,
pAdjustMethod = "fdr",
universe      = names(geneList),
minGSSize     = 0,
maxGSSize     = 500,
qvalueCutoff  = 0.05,
readable      = TRUE)
head(x)
x_df <- x@result
# gseDO function-
y <- gseDO(gene_num_vec,
nPerm         = 100,
minGSSize     = 120,
pvalueCutoff  = 0.02,
pAdjustMethod = "BH",
verbose       = FALSE)
head(y)
y_df <- y@result
# ------------ NCG (National Cancer Gene) ------------------
gene_2 <- names(geneList)[abs(geneList) < 3]
# enrichNCG
e_ncg <- enrichNCG(gene_2)
head(ncg)
# gseNCG
gse_ncg <- gseNCG(geneList,
nPerm         = 100,
minGSSize     = 120,
pvalueCutoff  = 0.2,
pAdjustMethod = "BH",
verbose       = FALSE)
#Fecth gene symbols
gse_ncg <- setReadable(ncg, 'org.Hs.eg.db')
gse_ncg_result <- gse_ncg@result
# ------------ enrichDGN (gene-disease associations)-------
eDGN <- enrichDGN(gene)
eDGN_result <- eDGN@result
# ------------ DGNv (snp -gene-disease associations)------------
snp <- c("rs1401296", "rs9315050", "rs5498", "rs1524668", "rs147377392",
"rs841", "rs909253", "rs7193343", "rs3918232", "rs3760396",
"rs2231137", "rs10947803", "rs17222919", "rs386602276", "rs11053646",
"rs1805192", "rs139564723", "rs2230806", "rs20417", "rs966221")
dgnv <- enrichDGNv(snp)
dgnv_result <- dgnv@result
# ------------ gseDGN function -------------------------
gse_dgn <- gseDGN(geneList,  nPerm         = 100,
minGSSize     = 120,
pvalueCutoff  = 0.2,
pAdjustMethod = "BH",
verbose       = FALSE)
gse_dgn <- setReadable(gse_dgn,'org.Hs.eg.db')
head(gse_dgn)
library(DOSE)
install.packages("DOSE")
BiocManager::install("DOSE")
library(DOSE)
data_file <- readRDS("~/data14Features.rds")
colnames(rowData(data_file))
data_file <- readRDS("~/data14Features.rds")
data14Features <- readRDS("~/MM_R_Scripts/data14Features.rds")
# Disease Analysis on local Dataset
install.packages("DOSE")
install.packages("DOSE")
install.packages("DOSE")
install.packages("DOSE")
library(meshes)
library(MeSH.Mmu.eg.db)
library(clusterProfiler)
library(dplyr)
library(clusterProfiler)
library(enrichplot)
data_file <- readRDS("data14Features.rds")
setwd("~/MM_R_Scripts")
data_file <- readRDS("data14Features.rds")
analysis_data <-metadata(data_file)$limma[,"Sirt_vs_Mock",]%>%
as.data.frame()%>%
dplyr::select(effect,p)%>%
cbind(.,ENTREZ_ID = rowData(data_file)$ENTREZID)
analysis_data$ENTREZ_ID <- analysis_data$ENTREZ_ID %>%
stringr::str_split(.,";",simplify=TRUE)%>%
.[,1]
geneList <- analysis_data %>% dplyr::filter(ENTREZ_ID != "" & effect != "")%>%
dplyr::select(ENTREZ_ID,effect)
gene_num_vec <- geneList [,2]
names(gene_num_vec) <- as.character(geneList [,1])
gene_num_vec <- sort(gene_num_vec,decreasing = TRUE, na.last = TRUE)
# Remove duplicate values
any(duplicated(names(gene_num_vec)))
gene_num_vec <- gene_num_vec[!duplicated(names(gene_num_vec))]
# Gene ID
gene <- names(gene_num_vec)[1:100]
gene <- names(gene_num_vec)
en_x <- enrichMeSH(gene, MeSHDb = "MeSH.Mmu.eg.db", database='gendoo', category = 'C')
x_result <- en_x@result
x_result <- en_x@result
en_x <- enrichMeSH(gene, MeSHDb = "MeSH.Mmu.eg.db", database='gendoo', category = 'C')
setwd("~/MM_R_Scripts")
# MSigDb library
# Script to run enricher( ) on Categories H, C2, C5
library(msigdbr)
library(magrittr)
library(dplyr)
library(clusterProfiler)
library(ggplot2)
library(tidyr)
library(tidytext)
# 1. Load and prepare data set
data_file <- readRDS("data14Features.rds")
colnames(rowData(data_file))
analysis_data <- metadata(data_file)$limma[,"Sirt_vs_Mock",] %>%
as.data.frame()%>%
dplyr::select(effect)%>%
cbind(.,ENTREZ_ID = rowData(data_file)$ENTREZID)
analysis_data$ENTREZ_ID <- analysis_data$ENTREZ_ID %>%
stringr::str_split(.,";",simplify = TRUE)%>%
.[,1]
# Step 3 - create Gene List
geneList <- analysis_data %>% dplyr::filter(ENTREZ_ID != "" & effect != "")%>%
dplyr::select(ENTREZ_ID,effect)
# Step 4 - Numeric vector - effect value
gene_num_vec <- geneList [,2]
#        - Character vector - ENTREZ IDs
names(gene_num_vec) <- as.character(geneList [,1])
#        - Ordered Vector
gene_num_vec <- sort(gene_num_vec,decreasing = TRUE, na.last = TRUE)
# Step 5 - Remove duplicate values
any(duplicated(names(gene_num_vec)))
gene_num_vec <- gene_num_vec[!duplicated(names(gene_num_vec))]
geneID <- names(gene_num_vec)
# ----------------------------------------------------------
# 2.Extract from MSigDb Analysis
msigdbr_data <- msigdbr(species = "Mus musculus")%>%
dplyr::select(gs_name, entrez_gene, gs_cat)
any(msigdbr_data$gs_cat== "H")
cat_vector <- c("H","C2","C5")
musculus_cat_data <- cat_vector %>% lapply(.,function(x){
cat_based_dataset <- msigdbr_data %>% dplyr::filter(gs_cat == x)
enrichr_cat_msigDB <- enricher(geneID, TERM2GENE = cat_based_dataset)
enrichr_cat_msigDB@result %>%
mutate(Category = x)
})
musculus_cat_df <- musculus_cat_data %>% do.call(rbind, .)
# MeSH analysis using Local Dataset -----------------------------------------------------
# Data source from "gendoo", "gene2pubmed" and "RBBH" are all supported. User can select
# interesting category to test. All 16 categories are supported. The analysis
# supports >70 species listed in MeSHDb BiocView.
# Gene IDs were selected based on Index
# gsea () doesnt return results - tried out with different Categories
# Try out gsea and dot plot
library(meshes)
library(MeSH.Mmu.eg.db)
library(clusterProfiler)
library(dplyr)
library(clusterProfiler)
library(enrichplot)
# Dataset from DOSE
data_file <- readRDS("data14Features.rds")
analysis_data <-metadata(data_file)$limma[,"Sirt_vs_Mock",]%>%
as.data.frame()%>%
dplyr::select(effect,p)%>%
cbind(.,ENTREZ_ID = rowData(data_file)$ENTREZID)
analysis_data$ENTREZ_ID <- analysis_data$ENTREZ_ID %>%
stringr::str_split(.,";",simplify=TRUE)%>%
.[,1]
geneList <- analysis_data %>% dplyr::filter(ENTREZ_ID != "" & effect != "")%>%
dplyr::select(ENTREZ_ID,effect)
gene_num_vec <- geneList [,2]
names(gene_num_vec) <- as.character(geneList [,1])
gene_num_vec <- sort(gene_num_vec,decreasing = TRUE, na.last = TRUE)
# Remove duplicate values
any(duplicated(names(gene_num_vec)))
gene_num_vec <- gene_num_vec[!duplicated(names(gene_num_vec))]
# Gene ID
gene <- names(gene_num_vec)[1:100]
gene <- names(gene_num_vec)
# ----- enricher () ---------
en_x <- enrichMeSH(gene, MeSHDb = "MeSH.Mmu.eg.db", database='gendoo', category = 'C')
x_result <- en_x@result
# ----- gsea () ------------
gsea_y <- gseMeSH(gene_num_vec, MeSHDb = "MeSH.Mmu.eg.db", database = 'gene2pubmed', category = "V")
y_result <- gsea_y@result
#---- Visualization ----
#--- enrichplot (i.e.barplot, dotplot, cnetplot, emapplot and gseaplot) to visualize these enrichment results ---
dotplot(
x_result,
x = "GeneRatio",
color = "p.adjust",
showCategory = 10,
size = NULL,
split = NULL,
font.size = 12,
title = "Over Represntation"
)
gseaplot(y,y[1,1],title = y[1,2])
# MeSH analysis using Local Dataset -----------------------------------------------------
# Data source from "gendoo", "gene2pubmed" and "RBBH" are all supported. User can select
# interesting category to test. All 16 categories are supported. The analysis
# supports >70 species listed in MeSHDb BiocView.
# Gene IDs were selected based on Index
# gsea () doesnt return results - tried out with different Categories
# Try out gsea and dot plot
library(meshes)
library(MeSH.Mmu.eg.db)
library(clusterProfiler)
library(dplyr)
library(clusterProfiler)
library(enrichplot)
# Dataset from DOSE
data_file <- readRDS("data14Features.rds")
analysis_data <-metadata(data_file)$limma[,"Sirt_vs_Mock",]%>%
as.data.frame()%>%
dplyr::select(effect,p)%>%
cbind(.,ENTREZ_ID = rowData(data_file)$ENTREZID)
analysis_data$ENTREZ_ID <- analysis_data$ENTREZ_ID %>%
stringr::str_split(.,";",simplify=TRUE)%>%
.[,1]
geneList <- analysis_data %>% dplyr::filter(ENTREZ_ID != "" & effect != "")%>%
dplyr::select(ENTREZ_ID,effect)
gene_num_vec <- geneList [,2]
names(gene_num_vec) <- as.character(geneList [,1])
gene_num_vec <- sort(gene_num_vec,decreasing = TRUE, na.last = TRUE)
# Remove duplicate values
any(duplicated(names(gene_num_vec)))
gene_num_vec <- gene_num_vec[!duplicated(names(gene_num_vec))]
# Gene ID
gene <- names(gene_num_vec)[1:100]
gene <- names(gene_num_vec)
# ----- enricher () ---------
en_x <- enrichMeSH(gene, MeSHDb = "MeSH.Mmu.eg.db", database='gendoo', category = 'C')
x_result <- en_x@result
# ----- gsea () ------------
gsea_y <- gseMeSH(gene_num_vec, MeSHDb = "MeSH.Mmu.eg.db", database = 'gene2pubmed', category = "V")
y_result <- gsea_y@result
#---- Visualization ----
#--- enrichplot (i.e.barplot, dotplot, cnetplot, emapplot and gseaplot) to visualize these enrichment results ---
dotplot(
x_result,
x = "GeneRatio",
color = "p.adjust",
showCategory = 10,
size = NULL,
split = NULL,
font.size = 12,
title = "Over Represntation"
)
gseaplot(y,y[1,1],title = y[1,2])
library(meshes)
library(MeSH.Mmu.eg.db)
library(clusterProfiler)
library(dplyr)
library(clusterProfiler)
library(enrichplot)
data_file <- readRDS("data14Features.rds")
analysis_data <-metadata(data_file)$limma[,"Sirt_vs_Mock",]%>%
as.data.frame()%>%
dplyr::select(effect,p)%>%
cbind(.,ENTREZ_ID = rowData(data_file)$ENTREZID)
analysis_data$ENTREZ_ID <- analysis_data$ENTREZ_ID %>%
stringr::str_split(.,";",simplify=TRUE)%>%
.[,1]
geneList <- analysis_data %>% dplyr::filter(ENTREZ_ID != "" & effect != "")%>%
dplyr::select(ENTREZ_ID,effect)
gene_num_vec <- geneList [,2]
names(gene_num_vec) <- as.character(geneList [,1])
gene_num_vec <- sort(gene_num_vec,decreasing = TRUE, na.last = TRUE)
any(duplicated(names(gene_num_vec)))
gene_num_vec <- gene_num_vec[!duplicated(names(gene_num_vec))]
gene <- names(gene_num_vec)[1:100]
en_x <- enrichMeSH(gene, MeSHDb = "MeSH.Mmu.eg.db", database='gendoo', category = 'C')
x_result <- en_x@result
gsea_y <- gseMeSH(gene_num_vec, MeSHDb = "MeSH.Mmu.eg.db", database = 'gene2pubmed', category = "V")
y_result <- gsea_y@result
dotplot(
x_result,
x = "GeneRatio",
color = "p.adjust",
showCategory = 10,
size = NULL,
split = NULL,
font.size = 12,
title = "Over Represntation"
)
gsea_y <- gseMeSH(gene_num_vec, MeSHDb = "MeSH.Mmu.eg.db", database = 'gene2pubmed', category = "V", by = "DOSE")
gsea_y <- gseMeSH(gene_num_vec,
MeSHDb = "MeSH.Mmu.eg.db",
database = 'gene2pubmed',
category = "V",
by = "DOSE")
y <- gseMeSH(geneList,
MeSHDb = "MeSH.Hsa.eg.db",
database = 'gene2pubmed',
category = "G",
by = "DOSE")
y_result <- y@result
y_result <- y@result
dotplot(x)
gseaplot(y,y[1,1],title = y[1,2])
dotplot(x)
library(enrichplot)
setMethod("dotplot", signature(object = "enrichResult"),
function(object, x = "GeneRatio", color = "p.adjust",
showCategory=10, size = NULL,
split = NULL, font.size=12, title = "", ...) {
dotplot_internal(object, x, color, showCategory, size,
split, font.size, title, ...)
})
dotplot(x)
library(meshes)
library(MeSH.Mmu.eg.db)
library(clusterProfiler)
library(dplyr)
library(clusterProfiler)
library(enrichplot)
data_file <- readRDS("data14Features.rds")
analysis_data <-metadata(data_file)$limma[,"Sirt_vs_Mock",]%>%
as.data.frame()%>%
dplyr::select(effect,p)%>%
cbind(.,ENTREZ_ID = rowData(data_file)$ENTREZID)
analysis_data$ENTREZ_ID <- analysis_data$ENTREZ_ID %>%
stringr::str_split(.,";",simplify=TRUE)%>%
.[,1]
geneList <- analysis_data %>% dplyr::filter(ENTREZ_ID != "" & effect != "")%>%
dplyr::select(ENTREZ_ID,effect)
gene_num_vec <- geneList [,2]
names(gene_num_vec) <- as.character(geneList [,1])
gene_num_vec <- sort(gene_num_vec,decreasing = TRUE, na.last = TRUE)
any(duplicated(names(gene_num_vec)))
gene_num_vec <- gene_num_vec[!duplicated(names(gene_num_vec))]
gene <- names(gene_num_vec)[1:100]
en_x <- enrichMeSH(gene, MeSHDb = "MeSH.Mmu.eg.db", database='gendoo', category = 'C')
x_result <- en_x@result
gsea_y <- gseMeSH(gene_num_vec,
MeSHDb = "MeSH.Mmu.eg.db",
database = 'gene2pubmed',
category = "V",
by = "DOSE")
y_result <- gsea_y@result
goplot(en_x)
goplot(en_x)
goplot(en_x)
barplot(en_x, showCategory = 5)
barplot(en_x, showCategory = 5)
dotplot(
en_x,
x = "GeneRatio",
color = "p.adjust",
showCategory = 10,
size = NULL,
split = NULL,
font.size = 12,
title = "Over Represntation"
)
View(x_result)
dotplot(
en_x,
x = "Description",
color = "p.adjust",
showCategory = 10,
size = NULL,
split = NULL,
font.size = 12,
title = "Over Represntation"
)
dotplot(
en_x,
x = "Description",
color = "p.adjust",
showCategory = 10,
size = NULL,
split = NULL,
font.size = 12,
title = "Over Represntation"
)
gseaplot(y,y[1,1],title = y[1,2])
dotplot(
en_x
)
dotplot(en_x)
goplot(en_x)
barplot(en_x, showCategory = 5)
dotplot(en_x)
gseaplot(y,y[1,1],title = y[1,2])
library(meshes)
library(MeSH.db)
library(MeSH.Hsa.eg.db)
library(enrichplot)
data(geneList, package="DOSE")
de <- names(geneList)[1:100]
x <- enrichMeSH(de,
MeSHDb = 'MeSH.Hsa.eg.db',
database='gendoo',
category = 'C')
x_result <- x@result
